# Envoy control plane daemon settings

loglevel: info

webadmin:
  listen: 0.0.0.0:9902
  ipacl: 0.0.0.0/0
  logfile: envoycp-admin.log

# Cassandra settings
database:
  hostname: cassandra
  port: 9042
  tls:
    enable: false
  username: cassandra
  password: cassandra
  keyspace: gatekeeper
  timeout: 2s
  connectattempts: 20     # Will try up to 20 times to connect before giving up. This will allow Cassandra to start up.

xds:
  grpclisten: 0.0.0.0:9901
  configcompileinterval: 2s
  cluster: envoycp
  timeout: 2s

envoyproxy:
  extauthz:
    enable: true
    cluster: envoyauth
    timeout: 0.5s
    failuremodeallow: true
    requestbodysize: 512

  misc:
    servername: eb
    httpidletimeout: 15m
    maxconcurrentstreams: 100
    initialconnectionwindowsize: 65536
    initialstreamwindowsize: 1048576

  logging:
    # grpc:
    #   logname: httplog
    #   cluster: logreceiver
    #   timeout: 5s
    #   buffersize: 10485760
    file:
      logfile: /dev/stdout
      fields:
        downstream.remoteaddress: '%DOWNSTREAM_REMOTE_ADDRESS%'
        downstream.clientaddress: '%DOWNSTREAM_REMOTE_ADDRESS_WITHOUT_PORT%'

        request_id: '%REQ(REQUEST-ID)%'
        start_time: '%START_TIME%'
        caller: '%REQ(CALLER)%'
        http.protocol: '%PROTOCOL%'
        http.method: '%REQ(:METHOD)%'
        http.host: '%REQ(HOST)%'
        http2.authority: '%REQ(:AUTHORITY)%'
        http.path: '%REQ(X-ENVOY-ORIGINAL-PATH?:PATH)%'
        http.req_headers.content_type: '%REQ(CONTENT-TYPE)%'
        http.req_headers.user_agent: '%REQ(USER-AGENT)%'

        x_forwarded_for: '%REQ(X-FORWARDED-FOR)%'

        http.status_code: '%RESPONSE_CODE%'
        response_flags: '%RESPONSE_FLAGS%'
        bytes_sent: '%BYTES_SENT%'
        bytes_received: '%BYTES_RECEIVED%'
        request_duration: '%DURATION%'
        response_duration: '%RESPONSE_DURATION%'

        route.name: '%ROUTE_NAME%'

        upstream.cluster: '%UPSTREAM_CLUSTER%'
        upstream.host: '%UPSTREAM_HOST%'
        upstream.host.path: '%REQ(:PATH)%'
        upstream.transportfailurereason: '%UPSTREAM_TRANSPORT_FAILURE_REASON%'
        upstream.responsetime: '%RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)%'

        developer.email: '%DYNAMIC_METADATA(envoy.filters.http.ext_authz:developer.email)%'
        developer.id: '%DYNAMIC_METADATA(envoy.filters.http.ext_authz:developer.id)%'
        app.id: '%DYNAMIC_METADATA(envoy.filters.http.ext_authz:app.id)%'
        app.name: '%DYNAMIC_METADATA(envoy.filters.http.ext_authz:app.name)%'
        apiproduct.name: '%DYNAMIC_METADATA(envoy.filters.http.ext_authz:apiproduct.name)%'

        geoip.country: '%DYNAMIC_METADATA(envoy.filters.http.ext_authz:geoip.country)%'
        geoip.state: '%DYNAMIC_METADATA(envoy.filters.http.ext_authz:geoip.state)%'

        auth.apikey: '%DYNAMIC_METADATA(envoy.filters.http.ext_authz:auth.apikey)%'
        auth.method: '%DYNAMIC_METADATA(envoy.filters.http.ext_authz:auth.method)%'
        auth.token: '%DYNAMIC_METADATA(envoy.filters.http.ext_authz:auth.token)%'